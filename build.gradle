buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "http://files.minecraftforge.net/maven"
		}
		mavenCentral()
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}

plugins {
	id "org.ajoberstar.grgit" version "1.4.1"
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

import org.ajoberstar.grgit.Grgit

version = '1.12-2.3.0'
group = 'com.hea3ven.tools.commonutils'
archivesBaseName = 'h3nt-commonutils'

minecraft {
	version = '1.12-14.21.0.2334'
	mappings = "snapshot_20170617"
	runDir = "run"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	testCompile 'junit:junit:4.12'
}

uploadArchives {
	repositories {
		mavenDeployer {
			repository(url: project.hasProperty('hea3venMvnUrl') ? project.hea3venMvnUrl : '')
		}
	}
}

def last_release_commit = '447b5c664c16fe0938a3b42aa47b6bf721b21adc'
task updateChangelog << {
	def changelogFile = new File(projectDir, "CHANGELOG")
	def changelog = changelogFile.text

	def repo = Grgit.open(file("."))

	def additions = []
	def removes = []
	def fixes = []
	def extra = []
	repo.log { range(last_release_commit, 'HEAD') }.findAll { it.fullMessage.startsWith('* ') }.
			collect { it.fullMessage.trim().substring(2) }.each {
		if (it.startsWith('Add'))
			additions.add(it)
		else if (it.startsWith('Remove'))
			removes.add(it)
		else if (it.startsWith('Fix'))
			fixes.add(it)
		else
			extra.add(it)
	}

	changelog = '\n' + changelog
	(fixes + extra + removes + additions).each { changelog = '\t* ' + it + '\n' + changelog }

	changelog = version + ':\n' + changelog

	changelogFile.setText(changelog)

	def buildFile = new File(projectDir, 'build.gradle')
	def buildText = buildFile.text.replaceFirst(/last_release_commit = '[^']*'/, 'last_release_commit = \'' + repo.head().id + '\'')
	buildFile.setText(buildText)
}
